% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locator_functions.R
\name{final_}
\alias{final_}
\alias{in_statements}
\alias{in_values}
\alias{similar_names}
\title{Locator functions}
\usage{
final_(...)

in_statements(pattern, message = NULL, regex = FALSE, mistake = FALSE)

similar_names(x, message = NULL)

in_values(x, message = NULL)
}
\arguments{
\item{...}{placeholder for future possible arguments}

\item{pattern}{character string containing the pattern to search for in the statements}

\item{message}{character string giving the failure message}

\item{regex}{if \code{TRUE} treat the pattern as a regex}

\item{mistake}{if \code{TRUE}, the test fails if the pattern is located}

\item{x}{the target that you are looking for in the values.
Specify the match in terms of a comparison function}
}
\description{
\code{final_} finds the last command line in the code
No arguments need be given. Last is last!
}
\details{
\code{in_statements} looks for character matches to the code

\code{in_values} looks for a match to the values produced by the code

\code{similar_names} takes a character string containing an R expression.
It looks for the statement in the submitted code that has a set of names
that most closely matches those in the character string. It never fails, always
returning a capture object pointing to some statement. However, the heuristic
used for comparison is just a heuristic!
}
\seealso{
other locator functions \code{\link{assigns_to}}, \code{\link{fcall}}
}

