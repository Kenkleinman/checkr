% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matches.R
\name{match_number}
\alias{match_number}
\alias{match_names}
\alias{match_class}
\alias{match_data_frame}
\alias{match_formula}
\alias{match_vector}
\title{Comparison functions}
\usage{
match_number(x, tol = NULL, pm = 1e-08, range = NULL, hint = FALSE)

match_names(x, hint = FALSE)

match_class(x, hint = FALSE)

match_data_frame(x, names_contain = TRUE, names_match = FALSE,
  nrow = FALSE, classes = FALSE, hint = FALSE)

match_formula(x)

match_vector(x, same_order = TRUE, hint = FALSE)
}
\arguments{
\item{x}{the reference value for the object to be tested}

\item{tol}{specify the matching range by the ratio of the discrepancy to x}

\item{pm}{specify the matching range with a plus-or-minus amount}

\item{range}{specify the matching range by two numbers}

\item{hint}{if \code{TRUE}, attempt to give a more diagnostic explanation
of mistakes}

\item{names_contain}{if \code{TRUE} (default) allow the data frame being checked to contain
additional variable names than those in \code{x}.}

\item{names_match}{if \code{TRUE}, all the names in the data frame being checked must be
in the reference x. default: \code{FALSE}}

\item{nrow}{if \code{TRUE}, the number of rows must be the same}

\item{classes}{if \code{TRUE} the matching data frame variables must be of the same class}

\item{same_order}{if \code{TRUE}, insist that the vector elements be in the same order as in the soln.}
}
\value{
a function which, when applied to the object to be tested, carries out the matching
test and returns an failure message. (\code{""} means the test passed.)
}
\description{
There are two steps in using a comparison function. First, call the \code{match_} function itself, setting the
argument \code{x} to be the reference value to which you will want the comparison to be made. This
will return a function that will actually carry out the comparison. Second, use that returned function
as the argument to a locator function like \code{check_value()} or \code{check_argument()} or \code{find_value()}.
}
