% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glue.R
\name{location_qualifiers}
\alias{final_}
\alias{inside}
\alias{location_qualifiers}
\alias{previously}
\alias{then}
\alias{within_pipe}
\title{Qualifiers on command lines to be searched by test statements together}
\usage{
then(capture, inclusive = FALSE)

final_(capture)

previously(capture, inclusive = FALSE)

inside(capture)

within_pipe(capture)
}
\arguments{
\item{capture}{A set of expressions of the sort returned by capture.code(). A "capture" is the
kind of object taken as input to a locator test and generated as output from the test and,
in the end, used to set the information passed back to `tutor`.}

\item{inclusive}{if \code{TRUE} then include the previously matched line in the set of
lines to be tested in subsequent tests}
}
\description{
Qualifiers on command lines to be searched by test statements together

\code{final_} finds the last command line in the code
No arguments need be given. Last is last!
}
\details{
Test sequences are put together using the \code{magrittr} chain, as in
\code{USER_CODE \%>\% test_1 \%>\% test_2}. The functions documented here enable you to
restrict the command lines being searched for a match.

Consider these test sequences
\itemize{
\item \code{USER_CODE \%>\% test_1 \%>\% then \%>\% test_2}
\item \code{USER_CODE \%>\% test_1 \%>\% previously \%>\% test_2}
\item \code{USER_CODE \%>\% test_1 \%>\% inside \%>\% test_2}
}

The \code{then} qualifier means that \code{test_2} will look at only the lines in the code
after the line identified by \code{test_1}. (You can use \code{then(inclusive = TRUE)} to
include the \code{test_1} line as well.)

The \code{previously} qualifier means that \code{test_2} will examine only the lines that
preceed the line located by \code{test_1}. (Again, there is an optional \code{inclusive} argument.)

The \code{inside} qualifier directs \code{test_2} to examine only the single line identified
by \code{test_1}.

\code{within_pipe()} should be passed a capture object marking the start of the pipe
}
\seealso{
\code{\link{find_pipe_start}}
}

